<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.suresh.projects</groupId>
	<artifactId>movieworld</artifactId>
	<version>0.0.1</version>
	<packaging>war</packaging>

	<name>movieworld</name>
	<description>Movie World using Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.3.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<start-class>com.suresh.projects.MovieWorldApplication</start-class>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<cucumber.version>1.2.5</cucumber.version>
		<swagger2.version>2.7.0</swagger2.version>
		<querydsl.version>4.1.3</querydsl.version>
		<aws.sdk.version>1.11.162</aws.sdk.version>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
	<!-- aws sdk -->
		<dependency>
		    <groupId>com.amazonaws</groupId>
		    <artifactId>aws-java-sdk-rds</artifactId>
		    <version>${aws.sdk.version}</version>
		</dependency>
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-s3</artifactId>
		    <version>${aws.sdk.version}</version>
		</dependency>
		<dependency>
		    <groupId>com.amazonaws</groupId>
		    <artifactId>aws-java-sdk-sqs</artifactId>
		    <version>${aws.sdk.version}</version>
		</dependency>
	    <dependency>
	      <groupId>com.amazonaws</groupId>
	      <artifactId>amazon-sqs-java-messaging-lib</artifactId>
	      <version>1.0.0</version>
	      <type>jar</type>
	    </dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jms</artifactId>
		</dependency>
             	    
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
		</dependency>
	    <dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-tomcat</artifactId>
	        <scope>provided</scope>
	    </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<!-- spring data -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        
        <!-- hateoas for API discoverability-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-hateoas</artifactId>
        </dependency>
        
        <!-- Ops for API monitoring and metrics -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <!-- better API than just boot for getting metrics data -->
        <dependency>
        	<groupId>io.dropwizard.metrics</groupId>
        	<artifactId>metrics-core</artifactId>
        </dependency>
        
		<!-- MongoDB -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>

		<!-- Caching **to be used if you want ConcurrentHashMap isntead of ehcache**-->
<!-- 		<dependency> -->
<!-- 			<groupId>org.springframework.boot</groupId> -->
<!-- 			<artifactId>spring-boot-starter-cache</artifactId> -->
<!-- 		</dependency> -->
        
		<dependency>
		   <groupId>mysql</groupId>
		   <artifactId>mysql-connector-java</artifactId>
		</dependency>
		
		<!-- for converting DTO to entity and vice versa -->
		<dependency>
		    <groupId>org.modelmapper</groupId>
		    <artifactId>modelmapper</artifactId>
		    <version>0.7.8</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
		  <groupId>com.google.guava</groupId>
		  <artifactId>guava</artifactId>
		  <version>22.0</version>
		</dependency>
		
		<!-- Cucumber -->
		<dependency>
		    <groupId>info.cukes</groupId>
		    <artifactId>cucumber-java</artifactId>
		    <version>${cucumber.version}</version>
		    <scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>info.cukes</groupId>
		    <artifactId>cucumber-junit</artifactId>
		    <version>${cucumber.version}</version>
		    <scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>info.cukes</groupId>
		    <artifactId>cucumber-spring</artifactId>
		    <version>${cucumber.version}</version>
		    <scope>test</scope>
		</dependency>
		
		<!-- Swagger -->
		<dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-swagger2</artifactId>
		    <version>${swagger2.version}</version>
		</dependency>
		<dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-swagger-ui</artifactId>
		    <version>${swagger2.version}</version>
		</dependency>

		<!-- Query DSL for JPA/MongoDB queries -->
		<dependency>
		    <groupId>com.querydsl</groupId>
		    <artifactId>querydsl-apt</artifactId>
	    </dependency>
		<dependency> 
		    <groupId>com.querydsl</groupId>
		    <artifactId>querydsl-jpa</artifactId> 
		</dependency>
		<dependency>
		  <groupId>com.querydsl</groupId>
		  <artifactId>querydsl-mongodb</artifactId>
		</dependency>
		
		<!-- ehcache as cache implementation -->
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
		</dependency>

		<dependency>
		  <groupId>org.slf4j</groupId>
		  <artifactId>slf4j-log4j12</artifactId>
		</dependency>
            		
		<dependency>
		    <groupId>org.hamcrest</groupId>
		    <artifactId>hamcrest-library</artifactId>
		    <scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>com.jayway.jsonpath</groupId>
		    <artifactId>json-path</artifactId>
		    <scope>test</scope>
		</dependency>
		
	</dependencies>

	<distributionManagement>
		<repository>
			<id>repo.projects.suresh</id>
			<url>s3://repo.projects.suresh/release</url>
		</repository>
	</distributionManagement>
	
	<repositories>
		<repository>
			<id>repo.projects.suresh</id>
			<url>s3://repo.projects.suresh/release</url>
		</repository>
	</repositories>
  
	<build>
		<extensions>
			<extension>
			    <groupId>co.axiomzen.maven.wagons</groupId>
			    <artifactId>maven-s3-wagon</artifactId>
			    <version>1.2.6</version>
			</extension>
		</extensions>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>**/*Tests.java</exclude>
						<exclude>**/*IT.java</exclude>
						<exclude>**/CucumberLive.java</exclude>
					</excludes>
					<includes>
						<include>**/*UT.java</include>
					</includes>
				</configuration>
			</plugin>
			<!-- Plugin to generate Query types/Query predicates for entities -->
			<!-- Based on the types of annotations used on entities, add the corresponding Processors -->
		      <plugin>
		        <groupId>com.mysema.maven</groupId>
		        <artifactId>apt-maven-plugin</artifactId>
		        <version>1.1.3</version>
		        <executions>
		          <execution>
		            <goals>
		              <goal>process</goal>
		            </goals>
		            <configuration>
		              <outputDirectory>target/generated-sources/java</outputDirectory>
		              <processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>
		            </configuration>
		          </execution>
		        </executions>
		      </plugin>
 		</plugins>
	</build>

	<profiles>
		<profile>
			<id>live-test</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<excludes>
								<exclude>**/*Tests.java</exclude>
								<exclude>**/*IT.java</exclude>
							</excludes>
							<includes>
								<include>**/CucumberLive.java</include>
							</includes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>integration-test</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<excludes>
								<exclude>**/CucumberLive.java</exclude>
							</excludes>
							<includes>
								<include>**/*IT.java</include>
							</includes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
